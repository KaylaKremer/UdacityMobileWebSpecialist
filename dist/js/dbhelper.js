"use strict";var _createClass=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var dbPromise=idb.open("restaurant-reviews-db",2,function(e){switch(e.oldVersion){case 0:e.createObjectStore("restaurants",{keyPath:"id"});case 1:e.createObjectStore("reviews",{keyPath:"id"}).createIndex("restaurant_id","restaurant_id")}}),DBHelper=function(){function i(){_classCallCheck(this,i)}return _createClass(i,null,[{key:"fetchRestaurants",value:function(t,e){var n=void 0;n=e?i.DATABASE_RESTAURANTS_URL+"/"+e:""+i.DATABASE_RESTAURANTS_URL,fetch(n).then(function(e){if(e.ok)return e.json().then(function(o){dbPromise.then(function(e){for(var t=e.transaction("restaurants","readwrite"),n=t.objectStore("restaurants"),r=0;r<o.length;r++)n.put(o[r]);return t.complete&&n.getAll()}).then(function(e){return console.log("Successfully fetched restaurants from server & stored in IndexedDB!"),t(null,e)}).catch(function(e){return t("Failed to fetch restaurants from server & store in IndexedDB: "+e,null)})});dbPromise.then(function(e){var t=e.transaction("restaurants","readonly"),n=t.objectStore("restaurants");return t.complete&&n.getAll()}).then(function(e){return console.log("Successfully fetched data from IndexedDB!"),t(null,e)}).catch(function(e){return t("Failed to fetch restaurants from IndexedDB: "+e,null)})}).catch(function(e){return t("Fetch request for restaurants from server failed: "+e,null)})}},{key:"fetchRestaurantById",value:function(r,o){i.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t.find(function(e){return e.id===parseInt(r)});n?o(null,n):o("Restaurant does not exist",null)}})}},{key:"fetchReviewsById",value:function(l,t){fetch(i.DATABASE_REVIEWS_URL+"/?restaurant_id="+l,{method:"GET"}).then(function(e){if(e.ok)return e.json().then(function(a){dbPromise.then(function(e){for(var t=e.transaction("reviews","readwrite"),n=t.objectStore("reviews"),r=0;r<a.length;r++)n.put(a[r]);var o=n.index("restaurant_id");return t.complete&&o.getAll(parseInt(l))}).then(function(e){return console.log("Successfully fetched reviews from server & stored in IndexedDB!"),t(null,e)}).catch(function(e){return t("Failed to fetch reviews from server & store in IndexedDB: "+e,null)})});dbPromise.then(function(e){var t=e.transaction("reviews","readonly"),n=t.objectStore("reviews").index("resataurant_id");return t.complete&&n.getAll(l)}).then(function(e){return console.log("Successfully fetched reviews from IndexedDB!"),t(null,e)}).catch(function(e){return t("Failed to fetch reviews from IndexedDB: "+e,null)})}).catch(function(e){return t("Fetch request for reviews from server failed: "+e,null)})}},{key:"fetchRestaurantByCuisine",value:function(r,o){i.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t.filter(function(e){return e.cuisine_type==r});o(null,n)}})}},{key:"fetchRestaurantByNeighborhood",value:function(r,o){i.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t.filter(function(e){return e.neighborhood==r});o(null,n)}})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(r,o,a){i.fetchRestaurants(function(e,t){if(e)a(e,null);else{var n=t;"all"!=r&&(n=n.filter(function(e){return e.cuisine_type==r})),"all"!=o&&(n=n.filter(function(e){return e.neighborhood==o})),a(null,n)}})}},{key:"fetchNeighborhoods",value:function(o){i.fetchRestaurants(function(e,n){if(e)o(e,null);else{var r=n.map(function(e,t){return n[t].neighborhood}),t=r.filter(function(e,t){return r.indexOf(e)==t});o(null,t)}})}},{key:"fetchCuisines",value:function(o){i.fetchRestaurants(function(e,n){if(e)o(e,null);else{var r=n.map(function(e,t){return n[t].cuisine_type}),t=r.filter(function(e,t){return r.indexOf(e)==t});o(null,t)}})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id="+e.id}},{key:"smallImageUrlForRestaurant",value:function(e){return"/img/"+e.photograph_small}},{key:"largeImageUrlForRestaurant",value:function(e){return"/img/"+e.photograph_large}},{key:"mapMarkerForRestaurant",value:function(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:i.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}},{key:"staticImageForMapIndex",value:function(e){var t=40.722216,n=-73.987501,r=document.getElementById("map"),o="https://maps.googleapis.com/maps/api/staticmap?center="+t+","+n+"&zoom=12&size="+r.clientWidth+"x"+r.clientHeight+"&markers=color:red";return e.forEach(function(e){o+="|"+e.latlng.lat+","+e.latlng.lng}),o+="&key=AIzaSyByOElG6Eai0CEZ27dYL5Vw6NzJOt9FZAc"}},{key:"staticImageForMapRestaurantInfo",value:function(e){var t=document.getElementById("map"),n=t.clientWidth,r=t.clientHeight;return"https://maps.googleapis.com/maps/api/staticmap?center="+e.latlng.lat+","+e.latlng.lng+"&zoom=16&size="+n+"x"+r+"&markers=color:red|"+e.latlng.lat+","+e.latlng.lng+"&key=AIzaSyByOElG6Eai0CEZ27dYL5Vw6NzJOt9FZAc"}},{key:"updateFavorite",value:function(e,r,o){if(!navigator.onLine){var t={offlineId:"offlineFavorite-"+e,restaurantId:r,status:o};return localStorage.setItem(t.offlineId,JSON.stringify(t)),void i.updateOfflineFavorites()}fetch(i.DATABASE_RESTAURANTS_URL+"/"+r+"?is_favorite="+o,{method:"PUT"}).then(function(e){e.ok?dbPromise.then(function(e){var t=e.transaction("restaurants","readwrite"),n=t.objectStore("restaurants");n.get(r).then(function(e){return e.is_favorite=o,n.put(e),t.complete&&n.get(r)}).then(function(e){console.log("Successfully updated favorite status of "+e.name)}).catch(function(e){console.log("Failed to update favorite status: "+e)})}):console.log("Bad response received from server: "+e.status)}).catch(function(e){console.log("Fetch request for restaurants from server failed: "+e)})}},{key:"updateOfflineFavorites",value:function(){window.addEventListener("online",function(){if(0<localStorage.length){for(var e=0;e<localStorage.length;e++){if(!localStorage.key(e).includes("offlineFavorite"))return void console.log("Failed to find offline favorite status in local storage");var t=JSON.parse(localStorage.getItem(localStorage.key(e)));i.updateFavorite(null,t.restaurantId,t.status),localStorage.removeItem(t.offlineId),console.log("Successfully updated restaurant favorite satus from local storage")}var n=document.querySelector(".offline-favorite-label");n.parentNode.removeChild(n)}else console.log("Local storage is empty")})}},{key:"addReview",value:function(e,t,n){if(!navigator.onLine){var r={offlineId:"offlineReview-"+e.offline_id,restaurantId:e.restaurant_id,data:e};return localStorage.setItem(r.offlineId,JSON.stringify(r)),void i.addOfflineReviews(n)}var o=""+i.DATABASE_REVIEWS_URL,a={method:"POST",body:JSON.stringify(e),headers:new Headers({"Content-Type":"application/json"})};fetch(o,a).then(function(e){return e.ok?(console.log("Successfully posted review to server"),e.json()):void console.log("Bad response received from server: "+e.status)}).then(function(e){return i.fetchReviewsById(t,n)}).catch(function(e){console.log("Fetch request failed: "+e)})}},{key:"addOfflineReviews",value:function(n){window.addEventListener("online",function(){if(0<localStorage.length){for(var e=0;e<localStorage.length;e++){if(!localStorage.key(e).includes("offlineReview"))return void console.log("Failed to find offline review data in local storage");var t=JSON.parse(localStorage.getItem(localStorage.key(e)));i.addReview(t.data,t.restaurantId,n),localStorage.removeItem(t.offlineId),console.log("Successfully retrieved offline review data & removed from local storage")}Array.from(document.querySelectorAll(".offline-review-label")).forEach(function(e){e.parentNode.removeChild(e)})}else console.log("Local storage is empty")})}},{key:"removeReview",value:function(n,e,t,r){navigator.onLine?fetch(i.DATABASE_REVIEWS_URL+"/"+n,{method:"DELETE"}).then(function(e){return e.ok?e.json().then(function(e){dbPromise.then(function(e){var t=e.transaction("reviews","readwrite");return t.objectStore("reviews").delete(n),console.log("Successfully deleted review from server and IndexedDB"),t.complete})}):void console.log("Bad response received from server: "+e.status)}).then(function(e){return i.fetchReviewsById(t,r)}).catch(function(e){console.log("Fetch request failed: "+e)}):localStorage.removeItem("offlineReview-"+e)}},{key:"DATABASE_RESTAURANTS_URL",get:function(){return"http://localhost:1337/restaurants"}},{key:"DATABASE_REVIEWS_URL",get:function(){return"http://localhost:1337/reviews"}}]),i}();