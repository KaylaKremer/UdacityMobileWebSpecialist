'use strict';

//Establish version number of cache to remove outdated caches during an update
var cacheVersion = 'v17';

//Assets to cache for offline use
var cacheAssets = ['/', '/index.html', '/restaurant.html', '/restaurant.html?id=1', '/restaurant.html?id=2', '/restaurant.html?id=3', '/restaurant.html?id=4', '/restaurant.html?id=5', '/restaurant.html?id=6', '/restaurant.html?id=7', '/restaurant.html?id=8', '/restaurant.html?id=9', '/restaurant.html?id=10', '/manifest.json', '/css/styles.css', '/js/idb-bundle.js', '/js/main.js', '/js/restaurant_info.js', '/js/lazysizes.js', '/js/register.js', '/img/1_large.webp', '/img/2_large.webp', '/img/3_large.webp', '/img/4_large.webp', '/img/5_large.webp', '/img/6_large.webp', '/img/7_large.webp', '/img/8_large.webp', '/img/9_large.webp', '/img/10_large.webp', '/img/1_small.webp', '/img/2_small.webp', '/img/3_small.webp', '/img/4_small.webp', '/img/5_small.webp', '/img/6_small.webp', '/img/7_small.webp', '/img/8_small.webp', '/img/9_small.webp', '/img/10_small.webp', '/img/icon-192.png', '/img/icon-512.png', '/img/favicon.ico'];

//Installs a service worker and caches assets with current cache version as its name.
self.addEventListener('install', function (event) {
	event.waitUntil(caches.open(cacheVersion + '-restaurant').then(function (cache) {
		return cache.addAll(cacheAssets);
	}));
	console.log('Installed service worker and cached assets');
});

/* Updates the service worker with a newer version (if available in a waiting state). Activate fires once older service worker no longer controls current pages. Older cache(s) is also deleted. */
self.addEventListener('activate', function (event) {
	event.waitUntil(caches.keys().then(function (cacheNames) {
		return Promise.all(cacheNames.filter(function (cacheName) {
			return !cacheName.startsWith(cacheVersion);
		}).map(function (cacheName) {
			return caches.delete(cacheName);
		}));
	}));
	console.log('Deleted old cache and activated new service worker');
});

/* Fetches assets from the cache the service worker created if a matching response is found. If not, fetches assets from the network and adds these new asset requests to the cache. */
self.addEventListener('fetch', function (event) {
	event.respondWith(caches.match(event.request).then(function (response) {
		if (response) {
			return response;
		} else {
			var fetchRequest = event.request.clone();
			return fetch(fetchRequest).then(function (response) {
				if (!response || response.status !== 200 || response.type !== 'basic') {
					return response;
				}
				var responseToCache = response.clone();
				caches.open(cacheVersion + '-restaurant').then(function (cache) {
					cache.put(fetchRequest, responseToCache);
				});
				return response;
			});
		}
	}));
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3LmpzIl0sIm5hbWVzIjpbImNhY2hlVmVyc2lvbiIsImNhY2hlQXNzZXRzIiwic2VsZiIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsIndhaXRVbnRpbCIsImNhY2hlcyIsIm9wZW4iLCJ0aGVuIiwiY2FjaGUiLCJhZGRBbGwiLCJjb25zb2xlIiwibG9nIiwia2V5cyIsIlByb21pc2UiLCJhbGwiLCJjYWNoZU5hbWVzIiwiZmlsdGVyIiwiY2FjaGVOYW1lIiwic3RhcnRzV2l0aCIsIm1hcCIsImRlbGV0ZSIsInJlc3BvbmRXaXRoIiwibWF0Y2giLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJmZXRjaFJlcXVlc3QiLCJjbG9uZSIsImZldGNoIiwic3RhdHVzIiwidHlwZSIsInJlc3BvbnNlVG9DYWNoZSIsInB1dCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQU1BLGVBQWUsS0FBckI7O0FBRUE7QUFDQSxJQUFNQyxjQUFjLENBQ25CLEdBRG1CLEVBRW5CLGFBRm1CLEVBR25CLGtCQUhtQixFQUluQix1QkFKbUIsRUFLbkIsdUJBTG1CLEVBTW5CLHVCQU5tQixFQU9uQix1QkFQbUIsRUFRbkIsdUJBUm1CLEVBU25CLHVCQVRtQixFQVVuQix1QkFWbUIsRUFXbkIsdUJBWG1CLEVBWW5CLHVCQVptQixFQWFuQix3QkFibUIsRUFjbkIsZ0JBZG1CLEVBZW5CLGlCQWZtQixFQWdCbkIsbUJBaEJtQixFQWlCbkIsYUFqQm1CLEVBa0JuQix3QkFsQm1CLEVBbUJuQixrQkFuQm1CLEVBb0JuQixpQkFwQm1CLEVBcUJuQixtQkFyQm1CLEVBc0JuQixtQkF0Qm1CLEVBdUJuQixtQkF2Qm1CLEVBd0JuQixtQkF4Qm1CLEVBeUJuQixtQkF6Qm1CLEVBMEJuQixtQkExQm1CLEVBMkJuQixtQkEzQm1CLEVBNEJuQixtQkE1Qm1CLEVBNkJuQixtQkE3Qm1CLEVBOEJuQixvQkE5Qm1CLEVBK0JuQixtQkEvQm1CLEVBZ0NuQixtQkFoQ21CLEVBaUNuQixtQkFqQ21CLEVBa0NuQixtQkFsQ21CLEVBbUNuQixtQkFuQ21CLEVBb0NuQixtQkFwQ21CLEVBcUNuQixtQkFyQ21CLEVBc0NuQixtQkF0Q21CLEVBdUNuQixtQkF2Q21CLEVBd0NuQixvQkF4Q21CLEVBeUNuQixtQkF6Q21CLEVBMENuQixtQkExQ21CLEVBMkNuQixrQkEzQ21CLENBQXBCOztBQThDQTtBQUNBQyxLQUFLQyxnQkFBTCxDQUFzQixTQUF0QixFQUFpQyxpQkFBUztBQUN6Q0MsT0FBTUMsU0FBTixDQUNDQyxPQUFPQyxJQUFQLENBQWVQLFlBQWYsa0JBQTBDUSxJQUExQyxDQUErQyxpQkFBUztBQUN2RCxTQUFPQyxNQUFNQyxNQUFOLENBQWFULFdBQWIsQ0FBUDtBQUNBLEVBRkQsQ0FERDtBQUtBVSxTQUFRQyxHQUFSLENBQVksNENBQVo7QUFDQSxDQVBEOztBQVNBO0FBQ0FWLEtBQUtDLGdCQUFMLENBQXNCLFVBQXRCLEVBQWtDLGlCQUFTO0FBQzFDQyxPQUFNQyxTQUFOLENBQWdCQyxPQUFPTyxJQUFQLEdBQWNMLElBQWQsQ0FBbUIsc0JBQWM7QUFDaEQsU0FBT00sUUFBUUMsR0FBUixDQUFZQyxXQUFXQyxNQUFYLENBQWtCLHFCQUFhO0FBQ2pELFVBQU8sQ0FBQ0MsVUFBVUMsVUFBVixDQUFxQm5CLFlBQXJCLENBQVI7QUFDQSxHQUZrQixFQUVoQm9CLEdBRmdCLENBRVoscUJBQWE7QUFDbkIsVUFBT2QsT0FBT2UsTUFBUCxDQUFjSCxTQUFkLENBQVA7QUFDQSxHQUprQixDQUFaLENBQVA7QUFLQSxFQU5lLENBQWhCO0FBT0FQLFNBQVFDLEdBQVIsQ0FBWSxvREFBWjtBQUNBLENBVEQ7O0FBV0E7QUFDQVYsS0FBS0MsZ0JBQUwsQ0FBc0IsT0FBdEIsRUFBK0IsaUJBQVM7QUFDdkNDLE9BQU1rQixXQUFOLENBQ0NoQixPQUFPaUIsS0FBUCxDQUFhbkIsTUFBTW9CLE9BQW5CLEVBQTRCaEIsSUFBNUIsQ0FBaUMsb0JBQVk7QUFDNUMsTUFBR2lCLFFBQUgsRUFBYTtBQUNaLFVBQU9BLFFBQVA7QUFDQSxHQUZELE1BR0s7QUFDSixPQUFNQyxlQUFldEIsTUFBTW9CLE9BQU4sQ0FBY0csS0FBZCxFQUFyQjtBQUNBLFVBQU9DLE1BQU1GLFlBQU4sRUFBb0JsQixJQUFwQixDQUF5QixvQkFBWTtBQUMzQyxRQUFHLENBQUNpQixRQUFELElBQWFBLFNBQVNJLE1BQVQsS0FBb0IsR0FBakMsSUFBd0NKLFNBQVNLLElBQVQsS0FBa0IsT0FBN0QsRUFBc0U7QUFDckUsWUFBT0wsUUFBUDtBQUNBO0FBQ0QsUUFBTU0sa0JBQWtCTixTQUFTRSxLQUFULEVBQXhCO0FBQ0FyQixXQUFPQyxJQUFQLENBQWVQLFlBQWYsa0JBQTBDUSxJQUExQyxDQUErQyxpQkFBUztBQUN2REMsV0FBTXVCLEdBQU4sQ0FBVU4sWUFBVixFQUF3QkssZUFBeEI7QUFDQSxLQUZEO0FBR0EsV0FBT04sUUFBUDtBQUNBLElBVE0sQ0FBUDtBQVVBO0FBQ0QsRUFqQkQsQ0FERDtBQW9CQSxDQXJCRCIsImZpbGUiOiJzdy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vRXN0YWJsaXNoIHZlcnNpb24gbnVtYmVyIG9mIGNhY2hlIHRvIHJlbW92ZSBvdXRkYXRlZCBjYWNoZXMgZHVyaW5nIGFuIHVwZGF0ZVxuY29uc3QgY2FjaGVWZXJzaW9uID0gJ3YxNyc7XG5cbi8vQXNzZXRzIHRvIGNhY2hlIGZvciBvZmZsaW5lIHVzZVxuY29uc3QgY2FjaGVBc3NldHMgPSBbXG5cdCcvJyxcblx0Jy9pbmRleC5odG1sJyxcblx0Jy9yZXN0YXVyYW50Lmh0bWwnLFxuXHQnL3Jlc3RhdXJhbnQuaHRtbD9pZD0xJyxcblx0Jy9yZXN0YXVyYW50Lmh0bWw/aWQ9MicsXG5cdCcvcmVzdGF1cmFudC5odG1sP2lkPTMnLFxuXHQnL3Jlc3RhdXJhbnQuaHRtbD9pZD00Jyxcblx0Jy9yZXN0YXVyYW50Lmh0bWw/aWQ9NScsXG5cdCcvcmVzdGF1cmFudC5odG1sP2lkPTYnLFxuXHQnL3Jlc3RhdXJhbnQuaHRtbD9pZD03Jyxcblx0Jy9yZXN0YXVyYW50Lmh0bWw/aWQ9OCcsXG5cdCcvcmVzdGF1cmFudC5odG1sP2lkPTknLFxuXHQnL3Jlc3RhdXJhbnQuaHRtbD9pZD0xMCcsXG5cdCcvbWFuaWZlc3QuanNvbicsXG5cdCcvY3NzL3N0eWxlcy5jc3MnLFxuXHQnL2pzL2lkYi1idW5kbGUuanMnLFxuXHQnL2pzL21haW4uanMnLFxuXHQnL2pzL3Jlc3RhdXJhbnRfaW5mby5qcycsXG5cdCcvanMvbGF6eXNpemVzLmpzJyxcblx0Jy9qcy9yZWdpc3Rlci5qcycsXG5cdCcvaW1nLzFfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzJfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzNfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzRfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzVfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzZfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzdfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzhfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzlfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzEwX2xhcmdlLndlYnAnLFxuXHQnL2ltZy8xX3NtYWxsLndlYnAnLFxuXHQnL2ltZy8yX3NtYWxsLndlYnAnLFxuXHQnL2ltZy8zX3NtYWxsLndlYnAnLFxuXHQnL2ltZy80X3NtYWxsLndlYnAnLFxuXHQnL2ltZy81X3NtYWxsLndlYnAnLFxuXHQnL2ltZy82X3NtYWxsLndlYnAnLFxuXHQnL2ltZy83X3NtYWxsLndlYnAnLFxuXHQnL2ltZy84X3NtYWxsLndlYnAnLFxuXHQnL2ltZy85X3NtYWxsLndlYnAnLFxuXHQnL2ltZy8xMF9zbWFsbC53ZWJwJyxcblx0Jy9pbWcvaWNvbi0xOTIucG5nJyxcblx0Jy9pbWcvaWNvbi01MTIucG5nJyxcblx0Jy9pbWcvZmF2aWNvbi5pY28nXG5dO1xuXG4vL0luc3RhbGxzIGEgc2VydmljZSB3b3JrZXIgYW5kIGNhY2hlcyBhc3NldHMgd2l0aCBjdXJyZW50IGNhY2hlIHZlcnNpb24gYXMgaXRzIG5hbWUuXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2luc3RhbGwnLCBldmVudCA9PiB7XG5cdGV2ZW50LndhaXRVbnRpbChcblx0XHRjYWNoZXMub3BlbihgJHtjYWNoZVZlcnNpb259LXJlc3RhdXJhbnRgKS50aGVuKGNhY2hlID0+IHtcblx0XHRcdHJldHVybiBjYWNoZS5hZGRBbGwoY2FjaGVBc3NldHMpO1xuXHRcdH0pXG5cdCk7XG5cdGNvbnNvbGUubG9nKCdJbnN0YWxsZWQgc2VydmljZSB3b3JrZXIgYW5kIGNhY2hlZCBhc3NldHMnKTtcbn0pO1xuXG4vKiBVcGRhdGVzIHRoZSBzZXJ2aWNlIHdvcmtlciB3aXRoIGEgbmV3ZXIgdmVyc2lvbiAoaWYgYXZhaWxhYmxlIGluIGEgd2FpdGluZyBzdGF0ZSkuIEFjdGl2YXRlIGZpcmVzIG9uY2Ugb2xkZXIgc2VydmljZSB3b3JrZXIgbm8gbG9uZ2VyIGNvbnRyb2xzIGN1cnJlbnQgcGFnZXMuIE9sZGVyIGNhY2hlKHMpIGlzIGFsc28gZGVsZXRlZC4gKi9cbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignYWN0aXZhdGUnLCBldmVudCA9PiB7XG5cdGV2ZW50LndhaXRVbnRpbChjYWNoZXMua2V5cygpLnRoZW4oY2FjaGVOYW1lcyA9PiB7XG5cdFx0cmV0dXJuIFByb21pc2UuYWxsKGNhY2hlTmFtZXMuZmlsdGVyKGNhY2hlTmFtZSA9PiB7XG5cdFx0XHRyZXR1cm4gIWNhY2hlTmFtZS5zdGFydHNXaXRoKGNhY2hlVmVyc2lvbik7XG5cdFx0fSkubWFwKGNhY2hlTmFtZSA9PiB7XG5cdFx0XHRyZXR1cm4gY2FjaGVzLmRlbGV0ZShjYWNoZU5hbWUpO1xuXHRcdH0pKTtcblx0fSkpO1xuXHRjb25zb2xlLmxvZygnRGVsZXRlZCBvbGQgY2FjaGUgYW5kIGFjdGl2YXRlZCBuZXcgc2VydmljZSB3b3JrZXInKTtcbn0pO1xuXG4vKiBGZXRjaGVzIGFzc2V0cyBmcm9tIHRoZSBjYWNoZSB0aGUgc2VydmljZSB3b3JrZXIgY3JlYXRlZCBpZiBhIG1hdGNoaW5nIHJlc3BvbnNlIGlzIGZvdW5kLiBJZiBub3QsIGZldGNoZXMgYXNzZXRzIGZyb20gdGhlIG5ldHdvcmsgYW5kIGFkZHMgdGhlc2UgbmV3IGFzc2V0IHJlcXVlc3RzIHRvIHRoZSBjYWNoZS4gKi9cbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignZmV0Y2gnLCBldmVudCA9PiB7XG5cdGV2ZW50LnJlc3BvbmRXaXRoKFxuXHRcdGNhY2hlcy5tYXRjaChldmVudC5yZXF1ZXN0KS50aGVuKHJlc3BvbnNlID0+IHtcblx0XHRcdGlmKHJlc3BvbnNlKSB7XG5cdFx0XHRcdHJldHVybiByZXNwb25zZTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRjb25zdCBmZXRjaFJlcXVlc3QgPSBldmVudC5yZXF1ZXN0LmNsb25lKCk7XG5cdFx0XHRcdHJldHVybiBmZXRjaChmZXRjaFJlcXVlc3QpLnRoZW4ocmVzcG9uc2UgPT4ge1xuXHRcdFx0XHRcdGlmKCFyZXNwb25zZSB8fCByZXNwb25zZS5zdGF0dXMgIT09IDIwMCB8fCByZXNwb25zZS50eXBlICE9PSAnYmFzaWMnKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzcG9uc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGNvbnN0IHJlc3BvbnNlVG9DYWNoZSA9IHJlc3BvbnNlLmNsb25lKCk7XG5cdFx0XHRcdFx0Y2FjaGVzLm9wZW4oYCR7Y2FjaGVWZXJzaW9ufS1yZXN0YXVyYW50YCkudGhlbihjYWNoZSA9PiB7XG5cdFx0XHRcdFx0XHRjYWNoZS5wdXQoZmV0Y2hSZXF1ZXN0LCByZXNwb25zZVRvQ2FjaGUpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdHJldHVybiByZXNwb25zZTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fSlcblx0KTtcbn0pO1xuXG4iXX0=
