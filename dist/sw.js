'use strict';

//Establish version number of cache to remove outdated caches during an update
var cacheVersion = 'v19';

//Assets to cache for offline use
var cacheAssets = ['/', '/index.html', '/restaurant.html', '/restaurant.html?id=1', '/restaurant.html?id=2', '/restaurant.html?id=3', '/restaurant.html?id=4', '/restaurant.html?id=5', '/restaurant.html?id=6', '/restaurant.html?id=7', '/restaurant.html?id=8', '/restaurant.html?id=9', '/restaurant.html?id=10', '/manifest.json', '/css/styles.css', '/js/idb.js', '/js/dbhelper.js', '/js/main.js', '/js/restaurant_info.js', '/js/lazysizes.js', '/js/register.js', '/img/1_large.webp', '/img/2_large.webp', '/img/3_large.webp', '/img/4_large.webp', '/img/5_large.webp', '/img/6_large.webp', '/img/7_large.webp', '/img/8_large.webp', '/img/9_large.webp', '/img/10_large.webp', '/img/1_small.webp', '/img/2_small.webp', '/img/3_small.webp', '/img/4_small.webp', '/img/5_small.webp', '/img/6_small.webp', '/img/7_small.webp', '/img/8_small.webp', '/img/9_small.webp', '/img/10_small.webp', '/img/icon-192.png', '/img/icon-512.png', '/img/favicon.ico'];

//Installs a service worker and caches assets with current cache version as its name.
self.addEventListener('install', function (event) {
	event.waitUntil(caches.open(cacheVersion + '-restaurant').then(function (cache) {
		return cache.addAll(cacheAssets);
	}));
	console.log('Installed service worker and cached assets');
});

/* Updates the service worker with a newer version (if available in a waiting state). Activate fires once older service worker no longer controls current pages. Older cache(s) is also deleted. */
self.addEventListener('activate', function (event) {
	event.waitUntil(caches.keys().then(function (cacheNames) {
		return Promise.all(cacheNames.filter(function (cacheName) {
			return !cacheName.startsWith(cacheVersion);
		}).map(function (cacheName) {
			return caches.delete(cacheName);
		}));
	}));
	console.log('Deleted old cache and activated new service worker');
});

/* Fetches assets from the cache the service worker created if a matching response is found. If not, fetches assets from the network and adds these new asset requests to the cache. */
self.addEventListener('fetch', function (event) {
	event.respondWith(caches.match(event.request).then(function (response) {
		if (response) {
			return response;
		} else {
			var fetchRequest = event.request.clone();
			return fetch(fetchRequest).then(function (response) {
				if (!response || response.status !== 200 || response.type !== 'basic') {
					return response;
				}
				var responseToCache = response.clone();
				caches.open(cacheVersion + '-restaurant').then(function (cache) {
					cache.put(fetchRequest, responseToCache);
				});
				return response;
			});
		}
	}));
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3LmpzIl0sIm5hbWVzIjpbImNhY2hlVmVyc2lvbiIsImNhY2hlQXNzZXRzIiwic2VsZiIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsIndhaXRVbnRpbCIsImNhY2hlcyIsIm9wZW4iLCJ0aGVuIiwiY2FjaGUiLCJhZGRBbGwiLCJjb25zb2xlIiwibG9nIiwia2V5cyIsIlByb21pc2UiLCJhbGwiLCJjYWNoZU5hbWVzIiwiZmlsdGVyIiwiY2FjaGVOYW1lIiwic3RhcnRzV2l0aCIsIm1hcCIsImRlbGV0ZSIsInJlc3BvbmRXaXRoIiwibWF0Y2giLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJmZXRjaFJlcXVlc3QiLCJjbG9uZSIsImZldGNoIiwic3RhdHVzIiwidHlwZSIsInJlc3BvbnNlVG9DYWNoZSIsInB1dCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQU1BLGVBQWUsS0FBckI7O0FBRUE7QUFDQSxJQUFNQyxjQUFjLENBQ25CLEdBRG1CLEVBRW5CLGFBRm1CLEVBR25CLGtCQUhtQixFQUluQix1QkFKbUIsRUFLbkIsdUJBTG1CLEVBTW5CLHVCQU5tQixFQU9uQix1QkFQbUIsRUFRbkIsdUJBUm1CLEVBU25CLHVCQVRtQixFQVVuQix1QkFWbUIsRUFXbkIsdUJBWG1CLEVBWW5CLHVCQVptQixFQWFuQix3QkFibUIsRUFjbkIsZ0JBZG1CLEVBZW5CLGlCQWZtQixFQWdCbkIsWUFoQm1CLEVBaUJuQixpQkFqQm1CLEVBa0JuQixhQWxCbUIsRUFtQm5CLHdCQW5CbUIsRUFvQm5CLGtCQXBCbUIsRUFxQm5CLGlCQXJCbUIsRUFzQm5CLG1CQXRCbUIsRUF1Qm5CLG1CQXZCbUIsRUF3Qm5CLG1CQXhCbUIsRUF5Qm5CLG1CQXpCbUIsRUEwQm5CLG1CQTFCbUIsRUEyQm5CLG1CQTNCbUIsRUE0Qm5CLG1CQTVCbUIsRUE2Qm5CLG1CQTdCbUIsRUE4Qm5CLG1CQTlCbUIsRUErQm5CLG9CQS9CbUIsRUFnQ25CLG1CQWhDbUIsRUFpQ25CLG1CQWpDbUIsRUFrQ25CLG1CQWxDbUIsRUFtQ25CLG1CQW5DbUIsRUFvQ25CLG1CQXBDbUIsRUFxQ25CLG1CQXJDbUIsRUFzQ25CLG1CQXRDbUIsRUF1Q25CLG1CQXZDbUIsRUF3Q25CLG1CQXhDbUIsRUF5Q25CLG9CQXpDbUIsRUEwQ25CLG1CQTFDbUIsRUEyQ25CLG1CQTNDbUIsRUE0Q25CLGtCQTVDbUIsQ0FBcEI7O0FBK0NBO0FBQ0FDLEtBQUtDLGdCQUFMLENBQXNCLFNBQXRCLEVBQWlDLGlCQUFTO0FBQ3pDQyxPQUFNQyxTQUFOLENBQ0NDLE9BQU9DLElBQVAsQ0FBZVAsWUFBZixrQkFBMENRLElBQTFDLENBQStDLGlCQUFTO0FBQ3ZELFNBQU9DLE1BQU1DLE1BQU4sQ0FBYVQsV0FBYixDQUFQO0FBQ0EsRUFGRCxDQUREO0FBS0FVLFNBQVFDLEdBQVIsQ0FBWSw0Q0FBWjtBQUNBLENBUEQ7O0FBU0E7QUFDQVYsS0FBS0MsZ0JBQUwsQ0FBc0IsVUFBdEIsRUFBa0MsaUJBQVM7QUFDMUNDLE9BQU1DLFNBQU4sQ0FBZ0JDLE9BQU9PLElBQVAsR0FBY0wsSUFBZCxDQUFtQixzQkFBYztBQUNoRCxTQUFPTSxRQUFRQyxHQUFSLENBQVlDLFdBQVdDLE1BQVgsQ0FBa0IscUJBQWE7QUFDakQsVUFBTyxDQUFDQyxVQUFVQyxVQUFWLENBQXFCbkIsWUFBckIsQ0FBUjtBQUNBLEdBRmtCLEVBRWhCb0IsR0FGZ0IsQ0FFWixxQkFBYTtBQUNuQixVQUFPZCxPQUFPZSxNQUFQLENBQWNILFNBQWQsQ0FBUDtBQUNBLEdBSmtCLENBQVosQ0FBUDtBQUtBLEVBTmUsQ0FBaEI7QUFPQVAsU0FBUUMsR0FBUixDQUFZLG9EQUFaO0FBQ0EsQ0FURDs7QUFXQTtBQUNBVixLQUFLQyxnQkFBTCxDQUFzQixPQUF0QixFQUErQixpQkFBUztBQUN2Q0MsT0FBTWtCLFdBQU4sQ0FDQ2hCLE9BQU9pQixLQUFQLENBQWFuQixNQUFNb0IsT0FBbkIsRUFBNEJoQixJQUE1QixDQUFpQyxvQkFBWTtBQUM1QyxNQUFHaUIsUUFBSCxFQUFhO0FBQ1osVUFBT0EsUUFBUDtBQUNBLEdBRkQsTUFHSztBQUNKLE9BQU1DLGVBQWV0QixNQUFNb0IsT0FBTixDQUFjRyxLQUFkLEVBQXJCO0FBQ0EsVUFBT0MsTUFBTUYsWUFBTixFQUFvQmxCLElBQXBCLENBQXlCLG9CQUFZO0FBQzNDLFFBQUcsQ0FBQ2lCLFFBQUQsSUFBYUEsU0FBU0ksTUFBVCxLQUFvQixHQUFqQyxJQUF3Q0osU0FBU0ssSUFBVCxLQUFrQixPQUE3RCxFQUFzRTtBQUNyRSxZQUFPTCxRQUFQO0FBQ0E7QUFDRCxRQUFNTSxrQkFBa0JOLFNBQVNFLEtBQVQsRUFBeEI7QUFDQXJCLFdBQU9DLElBQVAsQ0FBZVAsWUFBZixrQkFBMENRLElBQTFDLENBQStDLGlCQUFTO0FBQ3ZEQyxXQUFNdUIsR0FBTixDQUFVTixZQUFWLEVBQXdCSyxlQUF4QjtBQUNBLEtBRkQ7QUFHQSxXQUFPTixRQUFQO0FBQ0EsSUFUTSxDQUFQO0FBVUE7QUFDRCxFQWpCRCxDQUREO0FBb0JBLENBckJEIiwiZmlsZSI6InN3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9Fc3RhYmxpc2ggdmVyc2lvbiBudW1iZXIgb2YgY2FjaGUgdG8gcmVtb3ZlIG91dGRhdGVkIGNhY2hlcyBkdXJpbmcgYW4gdXBkYXRlXG5jb25zdCBjYWNoZVZlcnNpb24gPSAndjE5JztcblxuLy9Bc3NldHMgdG8gY2FjaGUgZm9yIG9mZmxpbmUgdXNlXG5jb25zdCBjYWNoZUFzc2V0cyA9IFtcblx0Jy8nLFxuXHQnL2luZGV4Lmh0bWwnLFxuXHQnL3Jlc3RhdXJhbnQuaHRtbCcsXG5cdCcvcmVzdGF1cmFudC5odG1sP2lkPTEnLFxuXHQnL3Jlc3RhdXJhbnQuaHRtbD9pZD0yJyxcblx0Jy9yZXN0YXVyYW50Lmh0bWw/aWQ9MycsXG5cdCcvcmVzdGF1cmFudC5odG1sP2lkPTQnLFxuXHQnL3Jlc3RhdXJhbnQuaHRtbD9pZD01Jyxcblx0Jy9yZXN0YXVyYW50Lmh0bWw/aWQ9NicsXG5cdCcvcmVzdGF1cmFudC5odG1sP2lkPTcnLFxuXHQnL3Jlc3RhdXJhbnQuaHRtbD9pZD04Jyxcblx0Jy9yZXN0YXVyYW50Lmh0bWw/aWQ9OScsXG5cdCcvcmVzdGF1cmFudC5odG1sP2lkPTEwJyxcblx0Jy9tYW5pZmVzdC5qc29uJyxcblx0Jy9jc3Mvc3R5bGVzLmNzcycsXG5cdCcvanMvaWRiLmpzJyxcblx0Jy9qcy9kYmhlbHBlci5qcycsXG5cdCcvanMvbWFpbi5qcycsXG5cdCcvanMvcmVzdGF1cmFudF9pbmZvLmpzJyxcblx0Jy9qcy9sYXp5c2l6ZXMuanMnLFxuXHQnL2pzL3JlZ2lzdGVyLmpzJyxcblx0Jy9pbWcvMV9sYXJnZS53ZWJwJyxcblx0Jy9pbWcvMl9sYXJnZS53ZWJwJyxcblx0Jy9pbWcvM19sYXJnZS53ZWJwJyxcblx0Jy9pbWcvNF9sYXJnZS53ZWJwJyxcblx0Jy9pbWcvNV9sYXJnZS53ZWJwJyxcblx0Jy9pbWcvNl9sYXJnZS53ZWJwJyxcblx0Jy9pbWcvN19sYXJnZS53ZWJwJyxcblx0Jy9pbWcvOF9sYXJnZS53ZWJwJyxcblx0Jy9pbWcvOV9sYXJnZS53ZWJwJyxcblx0Jy9pbWcvMTBfbGFyZ2Uud2VicCcsXG5cdCcvaW1nLzFfc21hbGwud2VicCcsXG5cdCcvaW1nLzJfc21hbGwud2VicCcsXG5cdCcvaW1nLzNfc21hbGwud2VicCcsXG5cdCcvaW1nLzRfc21hbGwud2VicCcsXG5cdCcvaW1nLzVfc21hbGwud2VicCcsXG5cdCcvaW1nLzZfc21hbGwud2VicCcsXG5cdCcvaW1nLzdfc21hbGwud2VicCcsXG5cdCcvaW1nLzhfc21hbGwud2VicCcsXG5cdCcvaW1nLzlfc21hbGwud2VicCcsXG5cdCcvaW1nLzEwX3NtYWxsLndlYnAnLFxuXHQnL2ltZy9pY29uLTE5Mi5wbmcnLFxuXHQnL2ltZy9pY29uLTUxMi5wbmcnLFxuXHQnL2ltZy9mYXZpY29uLmljbydcbl07XG5cbi8vSW5zdGFsbHMgYSBzZXJ2aWNlIHdvcmtlciBhbmQgY2FjaGVzIGFzc2V0cyB3aXRoIGN1cnJlbnQgY2FjaGUgdmVyc2lvbiBhcyBpdHMgbmFtZS5cbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignaW5zdGFsbCcsIGV2ZW50ID0+IHtcblx0ZXZlbnQud2FpdFVudGlsKFxuXHRcdGNhY2hlcy5vcGVuKGAke2NhY2hlVmVyc2lvbn0tcmVzdGF1cmFudGApLnRoZW4oY2FjaGUgPT4ge1xuXHRcdFx0cmV0dXJuIGNhY2hlLmFkZEFsbChjYWNoZUFzc2V0cyk7XG5cdFx0fSlcblx0KTtcblx0Y29uc29sZS5sb2coJ0luc3RhbGxlZCBzZXJ2aWNlIHdvcmtlciBhbmQgY2FjaGVkIGFzc2V0cycpO1xufSk7XG5cbi8qIFVwZGF0ZXMgdGhlIHNlcnZpY2Ugd29ya2VyIHdpdGggYSBuZXdlciB2ZXJzaW9uIChpZiBhdmFpbGFibGUgaW4gYSB3YWl0aW5nIHN0YXRlKS4gQWN0aXZhdGUgZmlyZXMgb25jZSBvbGRlciBzZXJ2aWNlIHdvcmtlciBubyBsb25nZXIgY29udHJvbHMgY3VycmVudCBwYWdlcy4gT2xkZXIgY2FjaGUocykgaXMgYWxzbyBkZWxldGVkLiAqL1xuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdhY3RpdmF0ZScsIGV2ZW50ID0+IHtcblx0ZXZlbnQud2FpdFVudGlsKGNhY2hlcy5rZXlzKCkudGhlbihjYWNoZU5hbWVzID0+IHtcblx0XHRyZXR1cm4gUHJvbWlzZS5hbGwoY2FjaGVOYW1lcy5maWx0ZXIoY2FjaGVOYW1lID0+IHtcblx0XHRcdHJldHVybiAhY2FjaGVOYW1lLnN0YXJ0c1dpdGgoY2FjaGVWZXJzaW9uKTtcblx0XHR9KS5tYXAoY2FjaGVOYW1lID0+IHtcblx0XHRcdHJldHVybiBjYWNoZXMuZGVsZXRlKGNhY2hlTmFtZSk7XG5cdFx0fSkpO1xuXHR9KSk7XG5cdGNvbnNvbGUubG9nKCdEZWxldGVkIG9sZCBjYWNoZSBhbmQgYWN0aXZhdGVkIG5ldyBzZXJ2aWNlIHdvcmtlcicpO1xufSk7XG5cbi8qIEZldGNoZXMgYXNzZXRzIGZyb20gdGhlIGNhY2hlIHRoZSBzZXJ2aWNlIHdvcmtlciBjcmVhdGVkIGlmIGEgbWF0Y2hpbmcgcmVzcG9uc2UgaXMgZm91bmQuIElmIG5vdCwgZmV0Y2hlcyBhc3NldHMgZnJvbSB0aGUgbmV0d29yayBhbmQgYWRkcyB0aGVzZSBuZXcgYXNzZXQgcmVxdWVzdHMgdG8gdGhlIGNhY2hlLiAqL1xuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdmZXRjaCcsIGV2ZW50ID0+IHtcblx0ZXZlbnQucmVzcG9uZFdpdGgoXG5cdFx0Y2FjaGVzLm1hdGNoKGV2ZW50LnJlcXVlc3QpLnRoZW4ocmVzcG9uc2UgPT4ge1xuXHRcdFx0aWYocmVzcG9uc2UpIHtcblx0XHRcdFx0cmV0dXJuIHJlc3BvbnNlO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGNvbnN0IGZldGNoUmVxdWVzdCA9IGV2ZW50LnJlcXVlc3QuY2xvbmUoKTtcblx0XHRcdFx0cmV0dXJuIGZldGNoKGZldGNoUmVxdWVzdCkudGhlbihyZXNwb25zZSA9PiB7XG5cdFx0XHRcdFx0aWYoIXJlc3BvbnNlIHx8IHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwIHx8IHJlc3BvbnNlLnR5cGUgIT09ICdiYXNpYycpIHtcblx0XHRcdFx0XHRcdHJldHVybiByZXNwb25zZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y29uc3QgcmVzcG9uc2VUb0NhY2hlID0gcmVzcG9uc2UuY2xvbmUoKTtcblx0XHRcdFx0XHRjYWNoZXMub3BlbihgJHtjYWNoZVZlcnNpb259LXJlc3RhdXJhbnRgKS50aGVuKGNhY2hlID0+IHtcblx0XHRcdFx0XHRcdGNhY2hlLnB1dChmZXRjaFJlcXVlc3QsIHJlc3BvbnNlVG9DYWNoZSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3BvbnNlO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9KVxuXHQpO1xufSk7XG5cbiJdfQ==
